//
// Generated file, do not edit! Created by opp_msgtool 6.0 from services/messages/ServiceMessages.msg.
//

#ifndef __SERVICEMESSAGES_M_H
#define __SERVICEMESSAGES_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class ProcessResponseSelfMessage;
// cplusplus {{
    typedef std::list<std::pair<std::string, double>> PlatoonResponse;
// }}

/**
 * Class generated from <tt>services/messages/ServiceMessages.msg:6</tt> by opp_msgtool.
 * <pre>
 * message ProcessResponseSelfMessage
 * {
 *     string platoonId;
 *     string triggeringCarId;
 *     double calcTime;
 *     PlatoonResponse resp;
 * }
 * </pre>
 */
class ProcessResponseSelfMessage : public ::omnetpp::cMessage
{
  protected:
    omnetpp::opp_string platoonId;
    omnetpp::opp_string triggeringCarId;
    double calcTime = 0;
    PlatoonResponse resp;

  private:
    void copy(const ProcessResponseSelfMessage& other);

  protected:
    bool operator==(const ProcessResponseSelfMessage&) = delete;

  public:
    ProcessResponseSelfMessage(const char *name=nullptr, short kind=0);
    ProcessResponseSelfMessage(const ProcessResponseSelfMessage& other);
    virtual ~ProcessResponseSelfMessage();
    ProcessResponseSelfMessage& operator=(const ProcessResponseSelfMessage& other);
    virtual ProcessResponseSelfMessage *dup() const override {return new ProcessResponseSelfMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual const char * getPlatoonId() const;
    virtual void setPlatoonId(const char * platoonId);

    virtual const char * getTriggeringCarId() const;
    virtual void setTriggeringCarId(const char * triggeringCarId);

    virtual double getCalcTime() const;
    virtual void setCalcTime(double calcTime);

    virtual const PlatoonResponse& getResp() const;
    virtual PlatoonResponse& getRespForUpdate() { return const_cast<PlatoonResponse&>(const_cast<ProcessResponseSelfMessage*>(this)->getResp());}
    virtual void setResp(const PlatoonResponse& resp);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ProcessResponseSelfMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ProcessResponseSelfMessage& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

inline any_ptr toAnyPtr(const PlatoonResponse *p) {if (auto obj = as_cObject(p)) return any_ptr(obj); else return any_ptr(p);}
template<> inline PlatoonResponse *fromAnyPtr(any_ptr ptr) { return ptr.get<PlatoonResponse>(); }
template<> inline ProcessResponseSelfMessage *fromAnyPtr(any_ptr ptr) { return check_and_cast<ProcessResponseSelfMessage*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __SERVICEMESSAGES_M_H

